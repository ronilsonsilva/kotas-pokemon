// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokemon.Infrastructure.Data.Context;

#nullable disable

namespace Pokemon.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20250608224404_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Pokemon.Domain.Entities.MestrePokemon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MestresPokemon");
                });

            modelBuilder.Entity("Pokemon.Domain.Entities.PokemonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseExperience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MestrePokemonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpriteFrontDefault")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pokemons", (string)null);
                });

            modelBuilder.Entity("Pokemon.Domain.Entities.PokemonEntity", b =>
                {
                    b.OwnsMany("Pokemon.Domain.Entities.PokemonAbility", "Abilities", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Slot")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsHidden")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.HasKey("PokemonId", "Slot");

                            b1.ToTable("PokemonAbilities", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.OwnsMany("Pokemon.Domain.Entities.PokemonMove", "Moves", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.HasKey("PokemonId", "Name");

                            b1.ToTable("PokemonMoves", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.OwnsMany("Pokemon.Domain.Entities.PokemonStat", "Stats", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .HasMaxLength(50)
                                .HasColumnType("TEXT");

                            b1.Property<int>("BaseStat")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Effort")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PokemonId", "Name");

                            b1.ToTable("PokemonStats", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.OwnsMany("Pokemon.Domain.Entities.PokemonType", "Types", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Slot")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("TEXT");

                            b1.HasKey("PokemonId", "Slot");

                            b1.ToTable("PokemonTypes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.Navigation("Abilities");

                    b.Navigation("Moves");

                    b.Navigation("Stats");

                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
